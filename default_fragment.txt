#version 330 core

out vec4 FragColor;

in vec2 TexCoords;
in vec3 FragPos;
in vec3 Normal;


uniform bool hasTexture;
uniform sampler2D texture_diffuse1;

uniform vec3 lightColour;
uniform vec3 viewPos;
uniform vec3 lightPos;
uniform bool lightEffected;

uniform vec3 testColourAdjus;


void main(){
	vec4 colour = hasTexture ? texture(texture_diffuse1, TexCoords) : vec4(1.0, 1.0, 1.0, 1.0);

	if(colour.a < 0.1)
		discard;
	if(lightEffected){


		float ambientStrength = 0.1;
		vec3 ambient = ambientStrength * lightColour;

		vec3 norm = normalize(Normal);
		vec3 lightDir = normalize(lightPos - FragPos);
		float diff = max(dot(norm, lightDir), 0.0);
		vec3 diffuse = diff * lightColour;

		vec3 result = (ambient + diffuse) * vec3(colour);
		FragColor = vec4(result, 1.0);
	} else {
		FragColor = colour * vec4(testColourAdjus, 1.0);
	}


}